// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// MBM
Rcpp::List MBM(const NumericVector& x, const NumericVector& w, const NumericVector& a0, const NumericVector& a1, const double& precision, const int& MaxIter);
RcppExport SEXP _tiltmod_MBM(SEXP xSEXP, SEXP wSEXP, SEXP a0SEXP, SEXP a1SEXP, SEXP precisionSEXP, SEXP MaxIterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericVector& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type w(wSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type a0(a0SEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type a1(a1SEXP);
    Rcpp::traits::input_parameter< const double& >::type precision(precisionSEXP);
    Rcpp::traits::input_parameter< const int& >::type MaxIter(MaxIterSEXP);
    rcpp_result_gen = Rcpp::wrap(MBM(x, w, a0, a1, precision, MaxIter));
    return rcpp_result_gen;
END_RCPP
}
// UBMM
Rcpp::List UBMM(const NumericVector& x, const NumericVector& w, const NumericVector& a, const double& precision, const int& MaxIter);
RcppExport SEXP _tiltmod_UBMM(SEXP xSEXP, SEXP wSEXP, SEXP aSEXP, SEXP precisionSEXP, SEXP MaxIterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericVector& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type w(wSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type a(aSEXP);
    Rcpp::traits::input_parameter< const double& >::type precision(precisionSEXP);
    Rcpp::traits::input_parameter< const int& >::type MaxIter(MaxIterSEXP);
    rcpp_result_gen = Rcpp::wrap(UBMM(x, w, a, precision, MaxIter));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_tiltmod_MBM", (DL_FUNC) &_tiltmod_MBM, 6},
    {"_tiltmod_UBMM", (DL_FUNC) &_tiltmod_UBMM, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_tiltmod(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
